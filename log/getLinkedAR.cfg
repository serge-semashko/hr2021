sys/getLinkedAR.cfg

[comments]
descr=s: проверить права юзера на родительские документы при отстуствии прав на документ
input=
output=
parents=
childs=
test_URL=?c=docs/create_child_type&pid=562
author=Куняев
[end]


[parameters]
request_name=U:
service=dubna.walt.service.TableServiceSpecial
tableCfg=table_no
LOG=OFF
[end]


[report header]
    $INCLUDE [start] ??!recurse
[end]

[start]
    $SET_PARAMETERS ROOT_ID=#doc_id#; ORIGINAL_DOC_ID=#doc_id# 
    $GET_DATA [get root]

    $SET_PARAMETERS current=current;  ??ROOT_ID=#ORIGINAL_DOC_ID#

    $LOG1 <b>===== ROOT DOC:#ROOT_ID# =========</b><br>
    $SET_PARAMETERS doc_id=#ROOT_ID#;
    $CALL_SERVICE c=sys/getARUD_;
    $SET_PARAMETERS LINKED_AR_R=Y;  ??AR_R
[end]


[item]
    $SET_PARAMETERS current=;
    $SET_PARAMETERS current=current;  ??ID=#ORIGINAL_DOC_ID#
$LOG1 <b>------- =====  DOC: #ID#  ======--------</b><br> 
        $SET_PARAMETERS is_deleted=; ??
    $SET_PARAMETERS doc_id=#ID#;
    $CALL_SERVICE c=sys/getARUD_;
    $SET_PARAMETERS LINKED_AR_R=Y;  ??AR_R
        $GET_DATA [count item childs]  ??!LINKED_AR_R
        $INCLUDE [recurse]  ??NUM_ITEM_CHILDS>0&!LINKED_AR_R
[end]

[recurse]
    $STORE_PARAMETERS ??
    $SET_PARAMETERS recurse=1; doc_id=#ID#; 
    $CALL_SERVICE c=sys/getLinkedAR;
    $RESTORE_PARAMETERS ??
[end]


[report footer]
    $SET_PARAMETERS doc_id=#ORIGINAL_DOC_ID#;
    $SET_PARAMETERS  WF_ID=; WF_ID_INACT=; CURR_STEP=; CURR_STEP_ID=; CURR_STEP_TYPE=; CURR_STEP_ROLES=; CURR_STEP_USERS=; SET_NUMBER_AT_STEP=; POST_DOC_AT_STEP=; WF_CANCELLED=; FIRST_STEP_STARTED=;
    $CALL_SERVICE c=sys/getARUD_;  ??LINKED_AR_R
    $SET_PARAMETERS AR_R=Y;    ??LINKED_AR_R
[end]

===============================================================================
===============================================================================
===============================================================================

[get root]
    select pid as "ROOT_ID", 'Y' as "R1" from d_list where id=#ROOT_ID# and not pid is null;  
    select pid as "ROOT_ID", 'Y' as "R2" from d_list where id=#ROOT_ID# and not pid is null; ??R1
    select pid as "ROOT_ID", 'Y' as "R3" from d_list where id=#ROOT_ID# and not pid is null; ??R2
    select pid as "ROOT_ID", 'Y' as "R4" from d_list where id=#ROOT_ID# and not pid is null; ??R3
    select pid as "ROOT_ID" from d_list where id=#ROOT_ID# and not pid is null  ??R4
[end]


[count item childs]
    select count(dh.id) as NUM_ITEM_CHILDS 
    from d_list dh 
        join d_types dt on dt.id=dh.type_id and dt.group_id<98 
    where dh.pid=#ID#
        and dh.id<>#ORIGINAL_DOC_ID#
[end]

[SQL]
    $INCLUDE [SQL_] ??!LINKED_AR_R
[end]

[SQL_]
    select dh.ID
    from d_list dh
        left join d_types dtp on dtp.Id = dh.type_id
    where dh.pid=#doc_id#  
        and dh.is_deleted=0 
        and dtp.group_id<98 
[end]
