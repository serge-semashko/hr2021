sys/getARUD_.cfg

[comments]
descr=S: получить права доступа текущего пользователя к документу. Попутно получается общая информация о документе
input=doc_id - ID документа, [uid] - ID юзера вместо текущего.
output=установка параметров: AR_R=Y -просмотр документа, AR_S-подпись, AR_W - изменение документа, AR_E - старт WF, AR_T - отзыв; AR_X-завершение, AR_A - админские права. Попутно ставятся параметры: CREATOR_ID, DOC_VERSION, DOC_TYPE_ID, DOC_DIVS, WF_ID, CURR_STEP, CURR_STEP_TYPE, DOC_STATUS, DOC_IS_DELETED, WF_CANCELLED, DOC_IS_CONFIDENTIAL, DOC_DATA_TABLE
parents=
childs=
testURL=?c=sys/getARUD&doc_id=1&uid=1
author=Куняев
[end]

[description]
[end]


[parameters]
request_name=S:get AR 4 doc
LOG=OFF
[end]


[report]
    $LOG2 <b>==================== getARUD_: doc_id=#doc_id#; USER_ID=#USER_ID#; ==================</b><br>
    $INCLUDE dat/common.dat[check login] ??!USER_ID
    $GET_DATA [getDocInfoSQL]   ??USER_ID
    $INCLUDE [check rights]     ??USER_ID&!AR_W=Y|!AR_E=Y|!AR_W=Y
[end]


[check rights]
    $SET_PARAMETERS AR_R=; AR_S=; AR_W=; AR_E=; AR_T=; AR_A=; CURR_STEP_STARTED=;
    $SET_PARAMETERS USER_ID=#uid#; ??uid
    $GET_DATA [check WF cancelled] ??!WF_ID
    $SET_PARAMETERS WF_CANCELLED=Y; WF_ID=;  ??LAST_RESULT_CODE=6

    $GET_DATA [getCurrStepInfo] ??WF_ID&CURR_STEP
    $SET_PARAMETERS FIRST_STEP_STARTED=Y; ??CURR_STEP>1|CURR_STEP_STARTED

    $INCLUDE [set initiator rights] ??USER_ID=#CREATOR_ID#

    $INCLUDE [check sign rights] ??!AR_S=Y
      ??!USER_ID=#CREATOR_ID#
    $GET_DATA [checkRightsByFYISQL] ??!AR_R|!WF_ID&!AR_W

    $CALL_SERVICE c=sys/checkAdminRights ??!DOC_IS_CONFIDENTIAL=1&!AR_S|!AR_T
    $SET_PARAMETERS AR_A=; ??DOC_IS_CONFIDENTIAL=1
    $SET_PARAMETERS AR_R=Y; ??AR_A=Y

    $SET_PARAMETERS AR_W=; AR_E=;  ??DOC_STATUS>#~doc_status_in_progress#
    $SET_PARAMETERS AR_X=Y; AR_W=;  ??AR_S=Y&CURR_STEP_TYPE=#~wf_step_process#
    $SET_PARAMETERS AR_S=; AR_W=;  ??CURR_STEP_TYPE=#~wf_step_process#
    $SET_PARAMETERS AR_W=; ??WF_ID
    $SET_PARAMETERS AR_T=Y;  ??AR_A=Y&WF_ID&ZZZ
         ??&ZZZ-убрали у админов право отзыва. Потом - вернули потом-перенос в adm/view_doc

    +++ разрешаем изменение Договора подряда на этапе завершения ++++ ??
    $SET_PARAMETERS AR_W=Y; ??AR_X=Y&DOC_TYPE_ID=6
    $SET_PARAMETERS AR_W=Y; ??AR_A=Y&AR_SYS_ADMIN=1

    $SET_PARAMETERS AR_R=Y; ??FULL_READ_ACCESS=Y
    $SET_PARAMETERS AR_W=Y; ??AR_S=Y&CURR_STEP_TYPE=#~wf_step_preparation#
    $SET_PARAMETERS AR_E=Y; ??!WF_ID&AR_W=Y&DOC_STATUS=#~doc_status_draft#|CURR_STEP_TYPE=#~wf_step_preparation#

    $SET_PARAMETERS CURR_STEP=#CURR_STEP# ??!CURR_STEP&What_It_Was?

    $SET_PARAMETERS AR_X=Y; AR_S=;  ??xxxzxx&!WF_HAS_MORE_STEPS&AR_S=Y
    $SET_PARAMETERS AR_X=Y; ??!WF_HAS_MORE_STEPS&AR_S=Y

    $LOG === AR_R=#AR_R#; AR_S=#AR_S#; AR_W=#AR_W#; AR_E=#AR_E#; AR_T=#AR_T#; AR_X=#AR_X#; AR_A=#AR_A#; WF_HAS_MORE_STEPS=#WF_HAS_MORE_STEPS#;<br>

    $LOG === CREATOR_ID=#CREATOR_ID#; DOC_VERSION=#DOC_VERSION#; DOC_TYPE_ID=#DOC_TYPE_ID#; DOC_DIVS=#DOC_DIVS#; DOC_STATUS=#DOC_STATUS#; DOC_IS_DELETED=#DOC_IS_DELETED#; DOC_DATA_TABLE=#DOC_DATA_TABLE#<br>
    DOC_IS_REJECTED=#DOC_IS_REJECTED#;  ??

    $LOG === WF:  WF_ID=#WF_ID#; WF_ID_INACT=#WF_ID_INACT#; CURR_STEP=#CURR_STEP#; CURR_STEP_TYPE=#CURR_STEP_TYPE#; WF_CANCELLED=#WF_CANCELLED#; CURR_STEP_USERS=#CURR_STEP_USERS#; FIRST_STEP_STARTED=#FIRST_STEP_STARTED#<br>
    $LOG =====================================================================================<br><br>
[end]


[set initiator rights]  ****** Инициатор: AR_R - всегда, AR_W, AR_E - если не стартован, AR_T - если стартован,  
    $SET_PARAMETERS AR_R=Y;
    $SET_PARAMETERS AR_T=Y; ??DOC_STATUS=1|DOC_STATUS=2
    $SET_PARAMETERS AR_W=Y; ??!FIRST_STEP_STARTED
    $SET_PARAMETERS AR_E=Y; ??!WF_ID&WF_ID_INACT
    $GET_DATA [checkSignRightSQL] ??WF_ID&CURR_STEP_USERS
      ??&CURR_STEP_STARTED=Y
[end]


[check sign rights]
    $GET_DATA [checkSignRightSQL] ??CURR_STEP_USERS&CURR_STEP_STARTED=Y
    $SET_PARAMETERS AR_R=Y; ??AR_S=Y
    $GET_DATA [checkRightsByPermits] ??!AR_R=Y
[end]


===============================================================================
===================================    SQLs    ================================
===============================================================================

[check WF cancelled]
    select /* #queryLabel# #c#: the last step result from wf_history */
         wh.result_code as LAST_RESULT_CODE, DATE_FORMAT(wh.dat,'#dateFormat#') as CANCEL_DAT, u.FIO as CANCEL_FIO
    from wf_history wh left join #table_users_full# u on u.id=wh.user_id
    where doc_id=#doc_id#
    order by dat desc
    limit 0,1
[end]


[checkRightsByPermits]  
    select 'Y' as AR_R from p_permits where doc_id=#doc_id# and user_id=#USER_ID#
[end]


[checkSignRightSQL]
    select 'Y' as AR_S from dual where #USER_ID# in(#CURR_STEP_USERS#)
[end]

[getDocInfoSQL]
    select /* #queryLabel# #c# */
        d.CREATOR_ID, d.version as "DOC_VERSION", d.TYPE_ID as "DOC_TYPE_ID"
        , d.status as "DOC_STATUS"
        , d.wf_status
        , d.is_deleted as "DOC_IS_DELETED", d.is_confidential as "DOC_IS_CONFIDENTIAL"
        , d.pid as "PARENT_DOC_ID"
        , w.id as WF_ID
        , w.CURR_STEP ??
        , wt.id as WF_ID_INACT
        , concat('d_data_', cast(type_id as char)) as "DOC_DATA_TABLE"
    from d_list d 
        left join wf_list wt on (wt.doc_id=d.id and wt.is_active=0)
        left join wf_list w on (w.doc_id=d.id and w.is_active=1)
    where d.id=#doc_id# 
    ;
    select /* Номер след.шага */ min(step) as "CURR_STEP" from wf where wf_id=#WF_ID# and result_code is null and is_active=1 ??WF_ID
    ;
    select 0 as CURR_STEP ??!WF_ID|!CURR_STEP
    ;
    select /* ID след.шага */ max(id) as "CURR_STEP_ID" from wf where wf_id=#WF_ID# and result_code is null and is_active=1 and step=#CURR_STEP# ??WF_ID&CURR_STEP
    ;
    select group_concat(div_id) as "DOC_DIVS" from d_divs where doc_id=#doc_id#
    ;
    select 'Y' as AR_R from d_divs where doc_id=#doc_id# and div_id in(#user_access_div#) ??user_access_div
[end]


[getCurrStepInfo]
    select  /* #queryLabel# #c# */
        group_concat(user_id) as "CURR_STEP_USERS"
        , group_concat(distinct role_id) as  "CURR_STEP_ROLES"
    from wf 
    where 
        wf_id=#WF_ID# 
        and step=#CURR_STEP# 
        and result_code is null 
        and is_active=1 
        and user_id>0 
    and user_id<>#CREATOR_ID# ??
    limit 1
    ;
    select  /* #queryLabel# #c# */ criteria as "CURR_STEP_CRITERIA" from wf where wf_id=#WF_ID# and step=#CURR_STEP# and result_code is null and role_id in(#CURR_STEP_ROLES#) and user_id>0 limit 1 ??CURR_STEP_ROLES
    ;
    select  /* #queryLabel# #c# */ COUNT(*) AS "CURR_STEP_NUM_USERS" from #table_users_full#  where id in(#CURR_STEP_USERS#)  ??CURR_STEP_USERS
    ;
    select  /* #queryLabel# #c# */
        step_type as "CURR_STEP_TYPE"
        , id as "CURR_STEP_ID"
        , role_id as "CURR_STEP_ROLE_ID"
        , criteria as "CURR_STEP_CRITERIA"  ??
             ??CURR_STEP_NUM_USERS>1
        , set_number as SET_NUMBER_AT_STEP, post_doc as POST_DOC_AT_STEP  
    from wf where wf_id=#WF_ID# and step=#CURR_STEP# and user_id=#USER_ID# and result_code is null and is_active=1
    limit 1
    ;
    select  /* #queryLabel# #c# */ 'Y' as "WF_HAS_MORE_STEPS"
    from wf 
    where wf_id=#WF_ID# 
        and step>#CURR_STEP# 
        and step_type<>#~wf_step_information# 
        and is_active=1
        and (user_id is null or user_id<>#USER_ID#)
    limit 1
    ;
    select  /* #queryLabel# #c# */ 'Y' as "CURR_STEP_STARTED" from wf where id=#CURR_STEP_ID#  and not started is null ??CURR_STEP_ID
[end]

[checkRightsByFYISQL]
    select 'Y' as AR_R from dual where exists (select id from d_sent_FYI where doc_id=#doc_id# and user_id=#USER_ID#)   ??!AR_R=Y
    ;
    select 'Y' as "AR_R" from wf_history_count wfh where wfh.doc_id=#doc_id# and wfh.user_id=#USER_ID#;  ??!AR_R=Y
    ;
    select 'Y' as AR_W from dual where exists (select id from d_sent_FYI where doc_id=#doc_id# and user_id=#USER_ID# and result_code=5) ??!WF_ID
[end]

